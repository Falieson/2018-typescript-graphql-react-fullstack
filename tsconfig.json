{
  "exclude": [
    "**/*.spec.ts",
    "build",
    "scripts",
    "webpack",
    ".vscode",
    ".reference",
  ],
  "include": [
    "src"
  ],
  "compilerOptions": {
    /* Basic Options */
    "outDir": "build",                         /* Redirect output structure to the directory. */
    "lib": ["esnext", "dom"],                 /* Specify library files to be included in the compilation. */
    "target": "es5",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "commonjs",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "moduleResolution": "node",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "jsx": "react",
    // "allowJs": true,                       /* Allow javascript files to be compiled. */
    // "declaration": true,                   /* Generates corresponding '.d.ts' file. */
    "baseUrl": ".",                           /* Base directory to resolve non-absolute module names. */
    "paths": {                                /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      "*": [
        "*",
        "./types/*",
        "../node_modules/*"
      ]
    },
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                       /* List of folders to include type definitions from. */
    // "types": [],                           /* Type declaration files to be included in compilation. */

    /* Strict Type-Checking Options */
    "alwaysStrict": true,                     /* Parse in strict mode and emit "use strict" for each source file. */
    "noFallthroughCasesInSwitch": true,       /* Report errors for fallthrough cases in switch statement. */
    "noImplicitAny": true,                    /* Raise error on expressions and declarations with an implied 'any' type. */
    "noImplicitReturns": true,                /* Report error when not all code paths in function return a value. */
    "noImplicitThis": true,                   /* Raise error on 'this' expressions with an implied 'any' type. */
    "noUnusedLocals": true,                   /* Report errors on unused locals. */
    "noUnusedParameters": true,               /* Report errors on unused parameters. */
    "preserveConstEnums": true,
    "strict": true,                           /* Enable all strict type-checking options. */
    "strictFunctionTypes": true,              /* Enable strict checking of function types. */
    "strictNullChecks": true,                 /* Enable strict null checks. */
    "strictPropertyInitialization": true,     /* Enable strict checking of property initialization in classes. */
    "suppressImplicitAnyIndexErrors": true,   /* Suppress noImplicitAny errors for indexing objects lacking index signatures. https://github.com/Microsoft/TypeScript/issues/1232#issuecomment-64510362 */

    /* Source Map Options */
    "sourceMap": true,                        /* Generates corresponding '.map' file. */
    "removeComments": true,                   /* Do not emit comments to output. */
    "newLine": "LF",                          /* Code for ending each file for Unix Filesystems.*/
    // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Common Additional Options */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    // "esModuleInterop": true                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
  }
}